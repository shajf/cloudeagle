!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
8021q-y	Makefile	/^8021q-y					:= vlan.o vlan_dev.o vlan_netlink.o$/;"	m
ADD_VLAN_CMD	vdev_vlan_group.h	/^	ADD_VLAN_CMD,$/;"	e	enum:vlan_cmds
DEL_VLAN_CMD	vdev_vlan_group.h	/^	DEL_VLAN_CMD,$/;"	e	enum:vlan_cmds
DRV_VERSION	vlan.c	28;"	d	file:
GARP_GVRP_ADDRESS	vlan_gvrp.c	15;"	d	file:
GET_VLAN_EGRESS_PRIORITY_CMD	vdev_vlan_group.h	/^	GET_VLAN_EGRESS_PRIORITY_CMD,$/;"	e	enum:vlan_cmds
GET_VLAN_INGRESS_PRIORITY_CMD	vdev_vlan_group.h	/^	GET_VLAN_INGRESS_PRIORITY_CMD,$/;"	e	enum:vlan_cmds
GET_VLAN_REALDEV_NAME_CMD	vdev_vlan_group.h	/^	GET_VLAN_REALDEV_NAME_CMD, \/* If this works, you know it's a VLAN device, btw *\/$/;"	e	enum:vlan_cmds
GET_VLAN_VID_CMD	vdev_vlan_group.h	/^	GET_VLAN_VID_CMD \/* Get the VID of this VLAN (specified by name) *\/$/;"	e	enum:vlan_cmds
GVRP_ATTR_INVALID	vlan_gvrp.c	/^	GVRP_ATTR_INVALID,$/;"	e	enum:gvrp_attributes	file:
GVRP_ATTR_MAX	vlan_gvrp.c	22;"	d	file:
GVRP_ATTR_VID	vlan_gvrp.c	/^	GVRP_ATTR_VID,$/;"	e	enum:gvrp_attributes	file:
SET_VLAN_EGRESS_PRIORITY_CMD	vdev_vlan_group.h	/^	SET_VLAN_EGRESS_PRIORITY_CMD,$/;"	e	enum:vlan_cmds
SET_VLAN_FLAG_CMD	vdev_vlan_group.h	/^	SET_VLAN_FLAG_CMD,$/;"	e	enum:vlan_cmds
SET_VLAN_INGRESS_PRIORITY_CMD	vdev_vlan_group.h	/^	SET_VLAN_INGRESS_PRIORITY_CMD,$/;"	e	enum:vlan_cmds
SET_VLAN_NAME_TYPE_CMD	vdev_vlan_group.h	/^	SET_VLAN_NAME_TYPE_CMD,$/;"	e	enum:vlan_cmds
VLAN_CFI_MASK	vdev_vlan_group.h	65;"	d
VLAN_ETH_ALEN	vdev_vlan_group.h	20;"	d
VLAN_ETH_DATA_LEN	vdev_vlan_group.h	27;"	d
VLAN_ETH_FRAME_LEN	vdev_vlan_group.h	28;"	d
VLAN_ETH_HLEN	vdev_vlan_group.h	21;"	d
VLAN_ETH_ZLEN	vdev_vlan_group.h	22;"	d
VLAN_FLAG_GVRP	vdev_vlan_group.h	/^	VLAN_FLAG_GVRP		= 0x2,$/;"	e	enum:vlan_flags
VLAN_FLAG_LOOSE_BINDING	vdev_vlan_group.h	/^	VLAN_FLAG_LOOSE_BINDING	= 0x4,$/;"	e	enum:vlan_flags
VLAN_FLAG_REORDER_HDR	vdev_vlan_group.h	/^	VLAN_FLAG_REORDER_HDR	= 0x1,$/;"	e	enum:vlan_flags
VLAN_GROUP_ARRAY_PART_LEN	vdev_vlan_group.h	76;"	d
VLAN_GROUP_ARRAY_SPLIT_PARTS	vdev_vlan_group.h	75;"	d
VLAN_HLEN	vdev_vlan_group.h	17;"	d
VLAN_NAME_TYPE_HIGHEST	vdev_vlan_group.h	/^	VLAN_NAME_TYPE_HIGHEST$/;"	e	enum:vlan_name_types
VLAN_NAME_TYPE_PLUS_VID	vdev_vlan_group.h	/^	VLAN_NAME_TYPE_PLUS_VID, \/* Name will look like:  vlan0005 *\/$/;"	e	enum:vlan_name_types
VLAN_NAME_TYPE_PLUS_VID_NO_PAD	vdev_vlan_group.h	/^	VLAN_NAME_TYPE_PLUS_VID_NO_PAD, \/* Name will look like:  vlan5 *\/$/;"	e	enum:vlan_name_types
VLAN_NAME_TYPE_RAW_PLUS_VID	vdev_vlan_group.h	/^	VLAN_NAME_TYPE_RAW_PLUS_VID, \/* name will look like:  eth1.0005 *\/$/;"	e	enum:vlan_name_types
VLAN_NAME_TYPE_RAW_PLUS_VID_NO_PAD	vdev_vlan_group.h	/^	VLAN_NAME_TYPE_RAW_PLUS_VID_NO_PAD, \/* Name will look like:  eth0.5 *\/$/;"	e	enum:vlan_name_types
VLAN_N_VID	vdev_vlan_group.h	68;"	d
VLAN_PRIO_MASK	vdev_vlan_group.h	63;"	d
VLAN_PRIO_SHIFT	vdev_vlan_group.h	64;"	d
VLAN_TAG_PRESENT	vdev_vlan_group.h	66;"	d
VLAN_VID_MASK	vdev_vlan_group.h	67;"	d
_LINUX_IF_VLAN_H_	vdev_vlan_group.h	10;"	d
__BEN_VLAN_802_1Q_INC__	vlan.h	6;"	d
__BEN_VLAN_PROC_INC__	vlanproc.h	2;"	d
__GVRP_ATTR_MAX	vlan_gvrp.c	/^	__GVRP_ATTR_MAX$/;"	e	enum:gvrp_attributes	file:
__VDEV_GROUP_H	vdev_group.h	5;"	d
__VLAN_GVRP_H	vlan_gvrp.h	6;"	d
__acquires	vlanproc.c	/^	__acquires(rcu)$/;"	f
__read_mostly	vlan.c	/^int vlan_net_id __read_mostly;$/;"	v
__read_mostly	vlan.c	/^static struct notifier_block vlan_notifier_block __read_mostly = {$/;"	v	typeref:struct:vlan_notifier_block	file:
__read_mostly	vlan_gvrp.c	/^static struct garp_application vlan_gvrp_app __read_mostly = {$/;"	v	typeref:struct:vlan_gvrp_app	file:
__read_mostly	vlan_netlink.c	/^struct rtnl_link_ops vlan_link_ops __read_mostly = {$/;"	v	typeref:struct:vlan_link_ops
__releases	vlanproc.c	/^	__releases(rcu)$/;"	f
__vlan_device_event	vlan.c	/^static void __vlan_device_event(struct net_device *dev, unsigned long event)$/;"	f	file:
__vlan_get_tag	vdev_vlan_group.h	/^static inline int __vlan_get_tag(const struct sk_buff *skb, u16 *vlan_tci)$/;"	f
__vlan_hwaccel_get_tag	vdev_vlan_group.h	/^static inline int __vlan_hwaccel_get_tag(const struct sk_buff *skb,$/;"	f
__vlan_hwaccel_put_tag	vdev_vlan_group.h	/^static inline struct sk_buff *__vlan_hwaccel_put_tag(struct sk_buff *skb,$/;"	f
__vlan_hwaccel_rx	vlan_core.c	/^EXPORT_SYMBOL(__vlan_hwaccel_rx);$/;"	v
__vlan_hwaccel_rx	vlan_core.c	/^int __vlan_hwaccel_rx(struct sk_buff *skb, struct vlan_group *grp,$/;"	f
__vlan_put_tag	vdev_vlan_group.h	/^static inline struct sk_buff *__vlan_put_tag(struct sk_buff *skb, u16 vlan_tci)$/;"	f
dent	vlan.h	/^	struct proc_dir_entry			*dent;$/;"	m	struct:vlan_dev_info	typeref:struct:vlan_dev_info::proc_dir_entry
egress_priority_map	vlan.h	/^	struct vlan_priority_tci_mapping	*egress_priority_map[16];$/;"	m	struct:vlan_dev_info	typeref:struct:vlan_dev_info::vlan_priority_tci_mapping
exit_vlan	vlan.c	/^void __exit exit_vlan(void)$/;"	f
flags	vlan.h	/^	u16					flags;$/;"	m	struct:vlan_dev_info
forward_pair	vdev_group.h	/^	struct vdev_group *forward_pair;$/;"	m	struct:vdev_group	typeref:struct:vdev_group::vdev_group
gvrp_attributes	vlan_gvrp.c	/^enum gvrp_attributes {$/;"	g	file:
h_dest	vdev_vlan_group.h	/^	unsigned char	h_dest[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_source	vdev_vlan_group.h	/^	unsigned char	h_source[ETH_ALEN];$/;"	m	struct:vlan_ethhdr
h_vlan_TCI	vdev_vlan_group.h	/^	__be16		h_vlan_TCI;$/;"	m	struct:vlan_ethhdr
h_vlan_TCI	vdev_vlan_group.h	/^	__be16	h_vlan_TCI;$/;"	m	struct:vlan_hdr
h_vlan_encapsulated_proto	vdev_vlan_group.h	/^	__be16		h_vlan_encapsulated_proto;$/;"	m	struct:vlan_ethhdr
h_vlan_encapsulated_proto	vdev_vlan_group.h	/^	__be16	h_vlan_encapsulated_proto;$/;"	m	struct:vlan_hdr
h_vlan_proto	vdev_vlan_group.h	/^	__be16		h_vlan_proto;$/;"	m	struct:vlan_ethhdr
hlist	vdev_vlan_group.h	/^	struct hlist_node	hlist;	\/* linked list *\/$/;"	m	struct:vlan_group	typeref:struct:vlan_group::hlist_node
if_type	vdev_group.h	/^	int if_type;$/;"	m	struct:vdev_group
ingress_priority_map	vlan.h	/^	u32					ingress_priority_map[8];$/;"	m	struct:vlan_dev_info
init_vlan	vlan.c	/^int __init init_vlan(void)$/;"	f
is_vlan_dev	vlan.h	/^static inline int is_vlan_dev(struct net_device *dev)$/;"	f
killall	vdev_vlan_group.h	/^	int			killall;$/;"	m	struct:vlan_group
kman_vlan_cmds	vlan.c	/^static struct csp_kman_cmd kman_vlan_cmds[]={$/;"	v	typeref:struct:csp_kman_cmd	file:
name_conf	vlanproc.c	/^static const char name_conf[]	 = "config";$/;"	v	file:
name_root	vlanproc.c	/^static const char name_root[]	 = "vlan";$/;"	v	file:
name_type	vlan.h	/^	unsigned short name_type;$/;"	m	struct:vlan_net
next	vlan.h	/^	struct vlan_priority_tci_mapping	*next;$/;"	m	struct:vlan_priority_tci_mapping	typeref:struct:vlan_priority_tci_mapping::vlan_priority_tci_mapping
nr_egress_mappings	vlan.h	/^	unsigned int				nr_egress_mappings;$/;"	m	struct:vlan_dev_info
nr_ingress_mappings	vlan.h	/^	unsigned int				nr_ingress_mappings;$/;"	m	struct:vlan_dev_info
nr_vdevs	vdev_group.h	/^	unsigned int nr_vdevs;$/;"	m	struct:vdev_group
nr_vlans	vdev_vlan_group.h	/^	unsigned int		nr_vlans;$/;"	m	struct:vlan_group
ops	vdev_group.h	/^	struct vdev_group_ops *ops;$/;"	m	struct:vdev_group	typeref:struct:vdev_group::vdev_group_ops
priority	vlan.h	/^	u32					priority;$/;"	m	struct:vlan_priority_tci_mapping
proc_vlan_conf	vlan.h	/^	struct proc_dir_entry *proc_vlan_conf;$/;"	m	struct:vlan_net	typeref:struct:vlan_net::proc_dir_entry
proc_vlan_dir	vlan.h	/^	struct proc_dir_entry *proc_vlan_dir;$/;"	m	struct:vlan_net	typeref:struct:vlan_net::proc_dir_entry
property	vdev_group.h	/^	int property;$/;"	m	struct:vdev_group
rcu	vdev_group.h	/^	struct rcu_head rcu;$/;"	m	struct:vdev_group	typeref:struct:vdev_group::rcu_head
rcu	vdev_vlan_group.h	/^	struct rcu_head		rcu;$/;"	m	struct:vlan_group	typeref:struct:vlan_group::rcu_head
real_dev	vdev_group.h	/^	struct net_device *real_dev;$/;"	m	struct:vdev_group	typeref:struct:vdev_group::net_device
real_dev	vdev_vlan_group.h	/^	struct net_device	*real_dev; \/* The ethernet(like) device$/;"	m	struct:vlan_group	typeref:struct:vlan_group::net_device
real_dev	vlan.h	/^	struct net_device			*real_dev;$/;"	m	struct:vlan_dev_info	typeref:struct:vlan_dev_info::net_device
real_dev_addr	vlan.h	/^	unsigned char				real_dev_addr[ETH_ALEN];$/;"	m	struct:vlan_dev_info
register_vlan_dev	vlan.c	/^int register_vlan_dev(struct net_device *dev)$/;"	f
register_vlan_device	vlan.c	/^static int register_vlan_device(struct net_device *real_dev, u16 vlan_id)$/;"	f	file:
rx_bytes	vlan.h	/^	u64			rx_bytes;$/;"	m	struct:vlan_pcpu_stats
rx_errors	vlan.h	/^	u32			rx_errors;$/;"	m	struct:vlan_pcpu_stats
rx_multicast	vlan.h	/^	u64			rx_multicast;$/;"	m	struct:vlan_pcpu_stats
rx_packets	vlan.h	/^	u64			rx_packets;$/;"	m	struct:vlan_pcpu_stats
syncp	vlan.h	/^	struct u64_stats_sync	syncp;$/;"	m	struct:vlan_pcpu_stats	typeref:struct:vlan_pcpu_stats::u64_stats_sync
tx_bytes	vlan.h	/^	u64			tx_bytes;$/;"	m	struct:vlan_pcpu_stats
tx_dropped	vlan.h	/^	u32			tx_dropped;$/;"	m	struct:vlan_pcpu_stats
tx_packets	vlan.h	/^	u64			tx_packets;$/;"	m	struct:vlan_pcpu_stats
unregister_vlan_dev	vlan.c	/^void unregister_vlan_dev(struct net_device *dev, struct list_head *head)$/;"	f
vdev_do_find	vdev_group.h	/^	struct net_device*	(*vdev_do_find)(struct net_device *real_dev,u16 vdev_id);$/;"	m	struct:vdev_group_ops	typeref:struct:vdev_group_ops::vdev_do_find
vdev_do_forward	vdev_group.h	/^	bool 			(*vdev_do_forward)(struct sk_buff **skb);$/;"	m	struct:vdev_group_ops
vdev_do_rcv	vdev_group.h	/^	bool 			(*vdev_do_rcv)(struct sk_buff **skb);$/;"	m	struct:vdev_group_ops
vdev_group	vdev_group.h	/^struct vdev_group$/;"	s
vdev_group_ops	vdev_group.h	/^struct vdev_group_ops$/;"	s
vlan_changelink	vlan_netlink.c	/^static int vlan_changelink(struct net_device *dev,$/;"	f	file:
vlan_check_real_dev	vlan.c	/^int vlan_check_real_dev(struct net_device *real_dev, u16 vlan_id)$/;"	f
vlan_check_reorder_header	vlan_dev.c	/^static inline struct sk_buff *vlan_check_reorder_header(struct sk_buff *skb)$/;"	f	file:
vlan_cmds	vdev_vlan_group.h	/^enum vlan_cmds {$/;"	g
vlan_copyright	vlan.c	/^static const char vlan_copyright[] = "shajianfeng <csp001314@163.com>";$/;"	v	file:
vlan_dev_change_flags	vlan_dev.c	/^int vlan_dev_change_flags(const struct net_device *dev, u32 flags, u32 mask)$/;"	f
vlan_dev_change_mtu	vlan_dev.c	/^static int vlan_dev_change_mtu(struct net_device *dev, int new_mtu)$/;"	f	file:
vlan_dev_change_rx_flags	vlan_dev.c	/^static void vlan_dev_change_rx_flags(struct net_device *dev, int change)$/;"	f	file:
vlan_dev_fcoe_ddp_done	vlan_dev.c	/^static int vlan_dev_fcoe_ddp_done(struct net_device *dev, u16 xid)$/;"	f	file:
vlan_dev_fcoe_ddp_setup	vlan_dev.c	/^static int vlan_dev_fcoe_ddp_setup(struct net_device *dev, u16 xid,$/;"	f	file:
vlan_dev_fcoe_ddp_target	vlan_dev.c	/^static int vlan_dev_fcoe_ddp_target(struct net_device *dev, u16 xid,$/;"	f	file:
vlan_dev_fcoe_disable	vlan_dev.c	/^static int vlan_dev_fcoe_disable(struct net_device *dev)$/;"	f	file:
vlan_dev_fcoe_enable	vlan_dev.c	/^static int vlan_dev_fcoe_enable(struct net_device *dev)$/;"	f	file:
vlan_dev_fcoe_get_wwn	vlan_dev.c	/^static int vlan_dev_fcoe_get_wwn(struct net_device *dev, u64 *wwn, int type)$/;"	f	file:
vlan_dev_get_egress_qos_mask	vlan_dev.c	/^vlan_dev_get_egress_qos_mask(struct net_device *dev, struct sk_buff *skb)$/;"	f	file:
vlan_dev_get_realdev_name	vlan_dev.c	/^void vlan_dev_get_realdev_name(const struct net_device *dev, char *result)$/;"	f
vlan_dev_get_stats64	vlan_dev.c	/^static struct rtnl_link_stats64 *vlan_dev_get_stats64(struct net_device *dev, struct rtnl_link_stats64 *stats)$/;"	f	file:
vlan_dev_hard_header	vlan_dev.c	/^static int vlan_dev_hard_header(struct sk_buff *skb, struct net_device *dev,$/;"	f	file:
vlan_dev_hard_start_xmit	vlan_dev.c	/^static netdev_tx_t vlan_dev_hard_start_xmit(struct sk_buff *skb,$/;"	f	file:
vlan_dev_info	vlan.h	/^static inline struct vlan_dev_info *vlan_dev_info(const struct net_device *dev)$/;"	f
vlan_dev_info	vlan.h	/^struct vlan_dev_info {$/;"	s
vlan_dev_init	vlan_dev.c	/^static int vlan_dev_init(struct net_device *dev)$/;"	f	file:
vlan_dev_ioctl	vlan_dev.c	/^static int vlan_dev_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)$/;"	f	file:
vlan_dev_neigh_setup	vlan_dev.c	/^static int vlan_dev_neigh_setup(struct net_device *dev, struct neigh_parms *pa)$/;"	f	file:
vlan_dev_open	vlan_dev.c	/^static int vlan_dev_open(struct net_device *dev)$/;"	f	file:
vlan_dev_real_dev	vlan_core.c	/^EXPORT_SYMBOL(vlan_dev_real_dev);$/;"	v
vlan_dev_real_dev	vlan_core.c	/^struct net_device *vlan_dev_real_dev(const struct net_device *dev)$/;"	f
vlan_dev_rebuild_header	vlan_dev.c	/^static int vlan_dev_rebuild_header(struct sk_buff *skb)$/;"	f	file:
vlan_dev_set_egress_priority	vlan_dev.c	/^int vlan_dev_set_egress_priority(const struct net_device *dev,$/;"	f
vlan_dev_set_ingress_priority	vlan_dev.c	/^void vlan_dev_set_ingress_priority(const struct net_device *dev,$/;"	f
vlan_dev_set_lockdep_class	vlan_dev.c	/^static void vlan_dev_set_lockdep_class(struct net_device *dev, int subclass)$/;"	f	file:
vlan_dev_set_lockdep_one	vlan_dev.c	/^static void vlan_dev_set_lockdep_one(struct net_device *dev,$/;"	f	file:
vlan_dev_set_mac_address	vlan_dev.c	/^static int vlan_dev_set_mac_address(struct net_device *dev, void *p)$/;"	f	file:
vlan_dev_set_rx_mode	vlan_dev.c	/^static void vlan_dev_set_rx_mode(struct net_device *vlan_dev)$/;"	f	file:
vlan_dev_stop	vlan_dev.c	/^static int vlan_dev_stop(struct net_device *dev)$/;"	f	file:
vlan_dev_uninit	vlan_dev.c	/^static void vlan_dev_uninit(struct net_device *dev)$/;"	f	file:
vlan_dev_vlan_id	vlan_core.c	/^EXPORT_SYMBOL(vlan_dev_vlan_id);$/;"	v
vlan_dev_vlan_id	vlan_core.c	/^u16 vlan_dev_vlan_id(const struct net_device *dev)$/;"	f
vlan_device_event	vlan.c	/^static int vlan_device_event(struct notifier_block *unused, unsigned long event,$/;"	f	file:
vlan_devices_arrays	vdev_vlan_group.h	/^	struct net_device **vlan_devices_arrays[VLAN_GROUP_ARRAY_SPLIT_PARTS];$/;"	m	struct:vlan_group	typeref:struct:vlan_group::net_device
vlan_eth_hdr	vdev_vlan_group.h	/^static inline struct vlan_ethhdr *vlan_eth_hdr(const struct sk_buff *skb)$/;"	f
vlan_ethhdr	vdev_vlan_group.h	/^struct vlan_ethhdr {$/;"	s
vlan_ethtool_get_drvinfo	vlan_dev.c	/^static void vlan_ethtool_get_drvinfo(struct net_device *dev,$/;"	f	file:
vlan_ethtool_get_flags	vlan_dev.c	/^static u32 vlan_ethtool_get_flags(struct net_device *dev)$/;"	f	file:
vlan_ethtool_get_rx_csum	vlan_dev.c	/^static u32 vlan_ethtool_get_rx_csum(struct net_device *dev)$/;"	f	file:
vlan_ethtool_get_settings	vlan_dev.c	/^static int vlan_ethtool_get_settings(struct net_device *dev,$/;"	f	file:
vlan_ethtool_ops	vlan_dev.c	/^static const struct ethtool_ops vlan_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
vlan_ethtool_set_tso	vlan_dev.c	/^static int vlan_ethtool_set_tso(struct net_device *dev, u32 data)$/;"	f	file:
vlan_exit_net	vlan.c	/^static void __net_exit vlan_exit_net(struct net *net)$/;"	f	file:
vlan_fill_info	vlan_netlink.c	/^static int vlan_fill_info(struct sk_buff *skb, const struct net_device *dev)$/;"	f	file:
vlan_find_dev	vdev_vlan_group.h	/^static inline struct net_device *vlan_find_dev(struct net_device *real_dev,$/;"	f
vlan_flags	vdev_vlan_group.h	/^enum vlan_flags {$/;"	g
vlan_fops	vlanproc.c	/^static const struct file_operations vlan_fops = {$/;"	v	typeref:struct:file_operations	file:
vlan_fullname	vlan.c	/^const char vlan_fullname[] = "802.1Q VLAN Support";$/;"	v
vlan_get_ingress_priority	vlan.h	/^static inline u32 vlan_get_ingress_priority(struct net_device *dev,$/;"	f
vlan_get_protocol	vdev_vlan_group.h	/^static inline __be16 vlan_get_protocol(const struct sk_buff *skb)$/;"	f
vlan_get_size	vlan_netlink.c	/^static size_t vlan_get_size(const struct net_device *dev)$/;"	f	file:
vlan_get_tag	vdev_vlan_group.h	/^static inline int vlan_get_tag(const struct sk_buff *skb, u16 *vlan_tci)$/;"	f
vlan_gro_frags	vlan_core.c	/^EXPORT_SYMBOL(vlan_gro_frags);$/;"	v
vlan_gro_frags	vlan_core.c	/^gro_result_t vlan_gro_frags(struct napi_struct *napi, struct vlan_group *grp,$/;"	f
vlan_gro_receive	vlan_core.c	/^EXPORT_SYMBOL(vlan_gro_receive);$/;"	v
vlan_gro_receive	vlan_core.c	/^gro_result_t vlan_gro_receive(struct napi_struct *napi, struct vlan_group *grp,$/;"	f
vlan_group	vdev_vlan_group.h	/^struct vlan_group {$/;"	s
vlan_group_alloc	vlan.c	/^static struct vlan_group *vlan_group_alloc(struct net_device *real_dev)$/;"	f	file:
vlan_group_free	vlan.c	/^static void vlan_group_free(struct vlan_group *grp)$/;"	f	file:
vlan_group_get_device	vdev_vlan_group.h	/^static inline struct net_device *vlan_group_get_device(struct vlan_group *vg,$/;"	f
vlan_group_prealloc_vid	vlan.c	/^static int vlan_group_prealloc_vid(struct vlan_group *vg, u16 vlan_id)$/;"	f	file:
vlan_group_set_device	vdev_vlan_group.h	/^static inline void vlan_group_set_device(struct vlan_group *vg,$/;"	f
vlan_gvrp_init	vlan_gvrp.c	/^int __init vlan_gvrp_init(void)$/;"	f
vlan_gvrp_init_applicant	vlan_gvrp.c	/^int vlan_gvrp_init_applicant(struct net_device *dev)$/;"	f
vlan_gvrp_request_join	vlan_gvrp.c	/^int vlan_gvrp_request_join(const struct net_device *dev)$/;"	f
vlan_gvrp_request_leave	vlan_gvrp.c	/^void vlan_gvrp_request_leave(const struct net_device *dev)$/;"	f
vlan_gvrp_uninit	vlan_gvrp.c	/^void vlan_gvrp_uninit(void)$/;"	f
vlan_gvrp_uninit_applicant	vlan_gvrp.c	/^void vlan_gvrp_uninit_applicant(struct net_device *dev)$/;"	f
vlan_hdr	vdev_vlan_group.h	/^struct vlan_hdr {$/;"	s
vlan_header_ops	vlan_dev.c	/^static const struct header_ops vlan_header_ops = {$/;"	v	typeref:struct:header_ops	file:
vlan_hwaccel_do_receive	vlan_core.c	/^bool vlan_hwaccel_do_receive(struct sk_buff **skbp)$/;"	f
vlan_hwaccel_receive_skb	vdev_vlan_group.h	/^static inline int vlan_hwaccel_receive_skb(struct sk_buff *skb,$/;"	f
vlan_hwaccel_rx	vdev_vlan_group.h	/^static inline int vlan_hwaccel_rx(struct sk_buff *skb,$/;"	f
vlan_id	vlan.h	/^	u16					vlan_id;$/;"	m	struct:vlan_dev_info
vlan_init_net	vlan.c	/^static int __net_init vlan_init_net(struct net *net)$/;"	f	file:
vlan_ioctl_handler	vlan.c	/^static int vlan_ioctl_handler(struct net *net, void __user *arg)$/;"	f	file:
vlan_map_policy	vlan_netlink.c	/^static const struct nla_policy vlan_map_policy[IFLA_VLAN_QOS_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
vlan_name_type_str	vlanproc.c	/^static const char *const vlan_name_type_str[VLAN_NAME_TYPE_HIGHEST] = {$/;"	v	file:
vlan_name_types	vdev_vlan_group.h	/^enum vlan_name_types {$/;"	g
vlan_net	vlan.h	/^struct vlan_net {$/;"	s
vlan_net_ops	vlan.c	/^static struct pernet_operations vlan_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
vlan_netdev_addr_lock_key	vlan_dev.c	/^static struct lock_class_key vlan_netdev_addr_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
vlan_netdev_ops	vlan_dev.c	/^static const struct net_device_ops vlan_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
vlan_netdev_ops	vlan_dev.c	/^static const struct net_device_ops vlan_netdev_ops;$/;"	v	typeref:struct:net_device_ops	file:
vlan_netdev_xmit_lock_key	vlan_dev.c	/^static struct lock_class_key vlan_netdev_xmit_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
vlan_netlink_fini	vlan_netlink.c	/^void __exit vlan_netlink_fini(void)$/;"	f
vlan_netlink_init	vlan_netlink.c	/^int __init vlan_netlink_init(void)$/;"	f
vlan_newlink	vlan_netlink.c	/^static int vlan_newlink(struct net *src_net, struct net_device *dev,$/;"	f	file:
vlan_pcpu_stats	vlan.h	/^	struct vlan_pcpu_stats __percpu		*vlan_pcpu_stats;$/;"	m	struct:vlan_dev_info	typeref:struct:vlan_dev_info::__percpu
vlan_pcpu_stats	vlan.h	/^struct vlan_pcpu_stats {$/;"	s
vlan_policy	vlan_netlink.c	/^static const struct nla_policy vlan_policy[IFLA_VLAN_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
vlan_priority_tci_mapping	vlan.h	/^struct vlan_priority_tci_mapping {$/;"	s
vlan_proc_add_dev	vlanproc.c	/^int vlan_proc_add_dev(struct net_device *vlandev)$/;"	f
vlan_proc_add_dev	vlanproc.h	16;"	d
vlan_proc_cleanup	vlanproc.c	/^void vlan_proc_cleanup(struct net *net)$/;"	f
vlan_proc_cleanup	vlanproc.h	15;"	d
vlan_proc_init	vlanproc.c	/^int __net_init vlan_proc_init(struct net *net)$/;"	f
vlan_proc_init	vlanproc.h	14;"	d
vlan_proc_rem_dev	vlanproc.c	/^int vlan_proc_rem_dev(struct net_device *vlandev)$/;"	f
vlan_proc_rem_dev	vlanproc.h	17;"	d
vlan_put_tag	vdev_vlan_group.h	/^static inline struct sk_buff *vlan_put_tag(struct sk_buff *skb, u16 vlan_tci)$/;"	f
vlan_qos	vlan.h	/^	u16					vlan_qos;$/;"	m	struct:vlan_priority_tci_mapping
vlan_qos_map_size	vlan_netlink.c	/^static inline size_t vlan_qos_map_size(unsigned int n)$/;"	f	file:
vlan_rcu_free	vlan.c	/^static void vlan_rcu_free(struct rcu_head *rcu)$/;"	f	file:
vlan_seq_next	vlanproc.c	/^static void *vlan_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
vlan_seq_open	vlanproc.c	/^static int vlan_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
vlan_seq_ops	vlanproc.c	/^static const struct seq_operations vlan_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
vlan_seq_show	vlanproc.c	/^static int vlan_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
vlan_set_encap_proto	vlan_dev.c	/^static inline void vlan_set_encap_proto(struct sk_buff *skb,$/;"	f	file:
vlan_setup	vlan_dev.c	/^void vlan_setup(struct net_device *dev)$/;"	f
vlan_skb_recv	vlan_dev.c	/^int vlan_skb_recv(struct sk_buff *skb, struct net_device *dev,$/;"	f
vlan_sync_address	vlan.c	/^static void vlan_sync_address(struct net_device *dev,$/;"	f	file:
vlan_transfer_features	vlan.c	/^static void vlan_transfer_features(struct net_device *dev,$/;"	f	file:
vlan_tx_tag_get	vdev_vlan_group.h	109;"	d
vlan_tx_tag_present	vdev_vlan_group.h	108;"	d
vlan_validate	vlan_netlink.c	/^static int vlan_validate(struct nlattr *tb[], struct nlattr *data[])$/;"	f	file:
vlan_validate_qos_map	vlan_netlink.c	/^static inline int vlan_validate_qos_map(struct nlattr *attr)$/;"	f	file:
vlan_version	vlan.c	/^const char vlan_version[] = DRV_VERSION;$/;"	v
vlandev_fops	vlanproc.c	/^static const struct file_operations vlandev_fops = {$/;"	v	typeref:struct:file_operations	file:
vlandev_seq_open	vlanproc.c	/^static int vlandev_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
vlandev_seq_show	vlanproc.c	/^static int vlandev_seq_show(struct seq_file *seq, void *offset)$/;"	f	file:
work_mode	vdev_group.h	/^	int work_mode;$/;"	m	struct:vdev_group
